{{- if .Values.rabbitmq.enabled }}

# =================================================================
# RabbitMQ Service
# RabbitMQ Pod에 대한 네트워크 연결을 설정합니다. (NodePort 타입)
# =================================================================
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service         # 서비스의 이름. StatefulSet의 'serviceName'과 일치해야 합니다.
spec:
  type: NodePort                  # 클러스터 외부에서 각 노드의 IP와 특정 포트(nodePort)로 접근할 수 있도록 합니다.
  selector:
    app: rabbitmq                 # 'app: rabbitmq' 라벨을 가진 Pod를 대상으로 트래픽을 전달합니다.
  ports:
    - name: amqp                  # AMQP 프로토콜 포트 (메시징용)
      port: 5672
      targetPort: 5672
    - name: management           # RabbitMQ 관리 UI 및 API용 포트
      port: 15672
      targetPort: 15672
      nodePort: 31567             # 외부에서 접근할 때 사용할 고정 포트 (30000-32767 사이)

---

# =================================================================
# RabbitMQ StatefulSet
# 상태 유지가 중요한 RabbitMQ 메시지 브로커를 배포합니다.
# =================================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
spec:
  serviceName: "rabbitmq-service" # 위에서 정의한 Service와 연결합니다.
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      # ----------------- 컨테이너 설정 -----------------
      containers:
      - name: rabbitmq-container
        image: rabbitmq:3.11.11-management # 관리 플러그인이 포함된 RabbitMQ 이미지
        ports:
        - name: amqp
          containerPort: 5672
        - name: management
          containerPort: 15672
        # ----------------- 환경 변수 설정 -----------------
        env:
        - name: RABBITMQ_DEFAULT_VHOST # 기본 가상 호스트(vhost) 이름
          value: "croms-device"
        - name: RABBITMQ_DEFAULT_USER  # 기본 사용자 이름 (Secret에서 가져옴)
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: USERNAME
        - name: RABBITMQ_DEFAULT_PASS  # 기본 사용자 비밀번호 (Secret에서 가져옴)
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: PASSWORD
        - name: RABBITMQ_ERLANG_COOKIE # 클러스터 구성 시 노드 간 인증을 위한 공유 비밀 값
          value: "RabbitMQ-My-Cookies"
        # ----------------- 볼륨 마운트 설정 -----------------
        volumeMounts:
        - name: rabbitmq-data        # 아래 volumeClaimTemplates에서 생성될 PVC의 이름
          mountPath: /var/lib/rabbitmq # RabbitMQ 데이터가 저장될 컨테이너 내부 경로
  # =================================================================
  # PersistentVolumeClaim 템플릿
  # StatefulSet의 각 Pod에 대해 고유한 영구 볼륨을 동적으로 생성합니다.
  # =================================================================
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data           # PVC의 이름 (예: rabbitmq-data-rabbitmq-0)
    spec:
      accessModes: [ "ReadWriteMany" ]    # ⬅️ RWO에서 RWX로 변경
      storageClassName: "nfs-client"      # ⬅️ local-path에서 nfs-client로 변경
      resources:
        requests:
          storage: 8Gi              # 8GB의 저장 공간 요청

{{- end }}
